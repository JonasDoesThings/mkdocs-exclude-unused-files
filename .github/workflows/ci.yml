---
name: CI
on:
  push:
    branches:
      - main
    paths:
      - '*.py'
      - '**/*.py'
      - 'poetry.lock'
      - 'poetry.toml'
      - 'pyproject.toml'
      - 'tests/**'
  pull_request:
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request
    types:
      - opened
      - ready_for_review
      - synchronize
      - reopened
    branches:
      - main
    paths:
      - '*.py'
      - '**/*.py'
      - 'poetry.lock'
      - 'poetry.toml'
      - 'pyproject.toml'
      - 'tests/**'

# Allow one concurrent
concurrency:
  group: ${{ format('{0}-{1}-{2}-{3}-{4}', github.workflow, github.event_name, github.ref || github.event.client_payload.ref, github.base_ref, github.head_ref) }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test:
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && !github.event.pull_request.draft) }}
    name: Test
    strategy:
      fail-fast: true
      max-parallel: 2
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Poetry
        run: pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Install dependencies
        run: poetry install --verbose

      - name: Test Build
        run: |
          poetry version --verbose
          poetry build --verbose

      - name: Test MkDocs (not enabled)
        run: |
          poetry run mkdocs build --config-file mkdocs.not-enabled.yml --verbose
        working-directory: tests/fixtures

      - name: Test MkDocs (append)
        run: |
          poetry run mkdocs build --config-file mkdocs.append.yml --verbose
        working-directory: tests/fixtures

      - name: Test MkDocs (default)
        run: |
          poetry run mkdocs build --verbose
        working-directory: tests/fixtures
